1.	Что такое ОС?
2.	В чем преимущества и недостатки ОС с разделением времени по сравнению с пакетными ОС?
3.	Каковы отличительные черты ОС реального времени?
4.	Почему языки команд диалоговых ОС намного проще, чем у пакетных ОС?
5.	Чем различаются однопользовательские и многопользовательские ОС?
6.	Что включается в понятие надежности ОС?
7.	Что понимается под эффективностью ОС?
8.	Что означает понятие мобильности ОС?
9.	Что такое абстракции ОС? Приведите примеры.
10.	Каковы основные задачи ОС как менеджера ресурсов?
11.	Что такое ядро ОС?
12.	В чем отличие привилегированного режима работы от непривилегированного?
13.	Для чего в ОС используется разделение режимов работы процессора?
14.	В чем недостаток переключения режимов работы процессора?
15.	Назовите примеры ОС, не использующих переключение режимов работы процессора
16.	Что такое политика и механизм в работе ОС?
17.	Чем различаются символьные и блочные устройства?
18.	Чем различаются устройства последовательного и произвольного доступа?
19.	Почему драйверы создают угрозу для надежности ОС?
20.	Приведите пример блочного устройства последовательного доступа.
21.	Почему флэш-диск с большим основанием можно назвать устройством произвольного доступа, чем магнитный диск?
22.	На какие основные типы можно подразделить прерывания?
23.	В каких случаях внешнее устройство генерирует аппаратное прерывание?
24.	В каком случае допустимо выполнение операций ввода/вывода с постоянным опросом готовности?
25.	Что делает контроллер прерываний?
26.	Чем высокоуровневые драйверы отличаются от низкоуровневых?
27.	Что такое старший и младший номера устройств в UNIX?
28.	Что такое спулинг?
29.	Что такое верхняя и нижняя половины драйвера в UNIX?
30.	Каковы особенности работы с устройствами по шине USB?
31.	Какие методы передачи данных могут использоваться для устройств USB?
32.	Что представляют собой политика и механизм при переключении процессов?
33.	Какая информация должна храниться в дескрипторе процесса?
34.	Из чего состоит контекст процесса?
35.	Какая информация должна храниться в дескрипторе нити, а не процесса?
36.	Какая информация должна храниться и в дескрипторе процесса, и в дескрипторе нити?
37.	Приведите примеры полезного применения нитей.
38.	В каких случаях вызывается диспетчер процессов?
39.	Чем различаются абсолютные и относительные приоритеты?
40.	Что такое двухуровневая система приоритетов Windows?
41.	Для чего нужно динамическое изменение приоритетов?
42.	В каких случаях понижается динамический приоритет?
43.	В каких случаях повышается динамический приоритет?
44.	Что такое инверсия приоритетов?
45.	Почему при пакетном режиме не используется вытеснение процессов?
46.	Что такое гарантированное  планирование процессов?
47.	Что такое лотерейное планирование процессов?
48.	Что такое справедливое планирование процессов?
49.	Какие алгоритмы планирования характерны для ОС реального времени?
50.	Как реализуется приоритетное планирование в ядре Linux?
51.	В чем достоинства и недостатки реализации нитей в пространстве пользователя?
52.	В чем отличие волокон от нитей?
53.	Нужны ли средства IPC для организации взаимодействия нитей?
54.	Какой основной недостаток программных решений проблемы гонок?
55.	Что такое двоичный семафор и чем он отличается от двоичной переменной?
56.	Как достигается неделимость операции down для мьютекса?
57.	Чем события отличаются от мьютексов?
58.	Какая информация передается с сигналом?
59.	В чем заключается принцип рандеву?
60.	Как формулируется задача «Поставщик/Потребитель»?
61.	В каких случаях может быть оправдано использование активного ожидания?
62.	Как работает команда «TAS X, Lock»?
63.	Как работает команда «XCHG X, Y»?
64.	Для чего используются команды TAS или XCHG?
65.	Почему переменные типа «Критическая секция» работают эффективнее, чем мьютексы?
66.	Чем переменные типа «блокировка» отличаются от мьютексов?
67.	Для чего используются условные переменные?
68.	Что такое барьер?
69.	Что такое монитор как средство синхронизации?
70.	Как формулируется задача «Поставщик / Потребитель»?
71.	Как формулируется задача «Читатели / Писатели»?
72.	Что такое тупик?
73.	Какие возможны способы борьбы с тупиками?
74.	В каких случаях возможен анализ алгоритмов для выявления тупиков?
75.	В чем идея алгоритма нумерованных ресурсов для предотвращения тупиков?
76.	В чем идея алгоритма банкира для предотвращения тупиков?
77.	В чем заключаются недостатки методов предотвращения тупиков?
78.	Какие действия можно предпринять для устранения возникшего тупика?
79.	Для какого типа ОС проблема тупиков особенно актуальна?
80.	В каких случаях используются безымянные программные каналы, а в каких – именованные?
81.	В каких случаях операции с программными каналами могут быть блокирующими?
82.	Какую команду можно использовать, чтобы получить список всех файлов определенного пользователя?
83.	Какую команду можно использовать, чтобы получить список всех файлов, содержащих заданную строку?
84.	Как выйти из команды man?
85.	Что означает команда, заключенная в обратные кавычки?
86.	Что делает команда make?
87.	Какой домашний каталог у пользователя root? А у пользователя John?
88.	Что содержит каталог /dev?
89.	Какой исполняемый файл создаст команда «cc hello.c»?
90.	В чем различие между виртуальными и физическими адресами?
91.	В чем недостаток распределения физических адресов фиксированными разделами?
92.	В чем недостаток распределения физических адресов переменными разделами?
93.	Чем различаются сегментная и страничная адресация?
94.	Для чего нужна многоуровневая страничная адресация?
95.	Из чего состоит виртуальный адрес при страничной адресации?
96.	Из чего состоит виртуальный адрес при сегментной адресации?
97.	Из чего состоит виртуальный адрес при многоуровневой страничной адресации?
98.	Для чего нужен кэш-буфер TLB?
99.	Какие преимущества у сегментной адресации перед страничной?
100.	Какие преимущества у страничной адресации перед сегментной?
101.	Для чего может использоваться бит обращения к странице?
102.	Какова цель алгоритмов выбора страницы для вытеснения?
103.	Чем различаются алгоритмы выбора вытесняемой страницы – оптимальный, LRU, FIFO, второго шанса?
104.	Что означает «второй шанс» в соответствующем алгоритме?
105.	Какие страницы вытесняются в первую очередь по алгоритму NRU?
106.	Что такое рабочий набор процесса?
107.	В каких состояниях может находиться страница виртуальной памяти процесса в Windows?
108.	Какого размера могут быть виртуальные страницы в Win32?
109.	В каких состояниях может находиться страница физической памяти в Windows?
110.	В чем преимущества и недостатки больших страниц?
111.	Что такое предвыборка (prefetch) в Windows?
112.	Из каких областей состоит адресное пространство процесса в Linux?
113.	В чем сходство и различие кэширования дисков и загрузки страниц по требованию?
114.	Зачем используются кластеры?
115.	Чем данные о размещении файла в exFAT отличаются от FAT? Что это дает?
116.	Какие есть способы хранения информации о свободных блоках?
117.	В чем заключается контроль целостности файловой системы по методу проверки блоков?
118.	В чем заключается контроль целостности файловой системы по методу проверки файлов?
119.	Какие стандартные хэндлы используются в большинстве ОС?
120.	Что хранится в косвенных блоках файловых систем UNIX?
121.	Зачем в файловой системе ext2 используются группы блоков?
122.	Как обратиться к именованному потоку данных в файле системы NTFS?
123.	В чем отличие символических связей от ярлыков Windows?
124.	Что такое разреженный файл и как он хранится?
125.	Где хранится ключ шифрования файла в NTFS?
126.	В чем идея создания файловых систем в пространстве пользователя?
127.	В чем преимущества и недостатки монолитного ядра?
128.	Что такое модульно-монолитное ядро?
129.	Чем модульно-монолитное ядро лучше, чем просто монолитное?
130.	В чем отличие ОС на основе микроядра?
131.	В чем преимущества и недостатки ОС на основе микроядра?
132.	Что такое гибридное ядро ОС?
133.	Какие типы компьютеров выделяются в ОС PLAN9?
134.	Чем отличается в PLAN9 локальное пространство имен от глобального?
135.	В чем идея экзоядра?
136.	Почему системы с экзоядром могут показать высокую производительность?
137.	Почему в ОС Singularity удается обойтись без переключения режимов?
138.	Что такое контракт канала в ОС Singularity?
1. Перечислите сетевые службы. Функции службы сетевой печати.
2.Служба администрирования. Функции службы администрирования.
3.Примеры сетевых ОС.
4.Что такое ВОС.
5.Что такое OSI.
6.Команда Ipconfig. Назначение, результат выполнения команды.
7.Команда Ping. Назначение, результат выполнения команды.
8.Команда Netstat. Назначение, результат выполнения команды.
9.Команда  Tracert. Назначение, результат выполнения команды.
10.Команда Route. Назначение, результат выполнения команды.
11.Команда Arp. Назначение, результат выполнения команды. 
12 Команда Nslookup. Назначение, результат выполнения команды. 
14.Команда FTP. Назначение, результат выполнения команды.  
15.Архитектура ВОС/OSI.
16.Назначение архитектуры ВОС/OSI.
17.Что такое файловый сервер. 
18.Что такое рабочая станция.
19.Функции, выполняемые файловым сервером в системе (сети).
20.Функции, выполняемые рабочей станцией в системе (сети).
21.Какие требования предъявляются к ЭВМ (компьютеру), чтобы на него можно было установить сетевое серверное ПО и он мог выполнять функции файл-сервера.
22.Архитектура системы (сети) с топологией общая шина. Пример топологии. Основные характеристики.
23.Архитектура системы (сети) с топологией звезда. Пример топологии.. Основные характеристики. 
24.Архитектура системы (сети) с топологией звезда переключателем. Пример топологии.  Основные характеристики. 
25.Архитектура системы (сети) с топологией кольцо. Пример топологии. Основные характеристики.
26.Архитектура системы (сети) с топологией общая шина с «окном». Пример топологии.  Основные характеристики.
27.Архитектура системы (сети) с топологией общая шина с «переключателем». Пример топологии. Основные характеристики.
28.Архитектура системы (сети) с топологией коммутации каналов. Пример топологии. Основные характеристики.
29.Архитектура системы (сети) с полносвязной топологией. Пример топологии.  Основные характеристики.
30.Архитектура системы (сети) с иерархической топологией. Пример топологии.  Основные характеристики.
31.Дайте определение, что такое архитектура системы (сети).
32.Перечислите основные параметры, характеризующие архитектуру системы (сети).
33.Приведите пример реальный систем (сетей), где в основе архитектуры системы (сети) лежит топология общая шина.
34.Приведите пример реальный систем (сетей), где в основе архитектуры системы (сети) лежит топология звезда.
35.Приведите пример реальный систем (сетей), где в основе архитектуры системы (сети) лежит топология звезда с переключателем.
36.Приведите пример реальный систем (сетей), где в основе архитектуры системы (сети) лежит топология кольцо.
37.Приведите пример реальный систем (сетей), где в основе архитектуры системы (сети) лежит топология шина с «окном».
38.Приведите пример реальный систем (сетей), где в основе архитектуры системы (сети) лежит топология шина с «переключателем».
39.Приведите пример реальный систем (сетей), где в основе архитектуры системы (сети) лежит топология с коммутацией каналов.
40. Приведите пример реальный систем (сетей), где в основе архитектуры системы (сети) лежит полносвязная топология.
41. Приведите пример реальный систем (сетей), где в основе архитектуры системы (сети) лежит иерархическая топология.
42.Что такое КТС?
43.Что такое КПС?
45.Что такое КПО?
46.Что такое OES?
47.Какие две платформы системного сетевого ПО лежат в основе построения OES.
48.В чём заключается преимущество использования двух платформ системного сетевого ПО при реализации и применения OES.
49.Что такое одноранговые вычислительные системы (сети)? Основные особенности.
50.Что такое многоранговые вычислительные системы (сети)? Основные особенности.
51.Перечислите главные требования к современным ОС и особенно к СОС.
52.В чём заключается особенность технологии взаимодействия и обработки данных в архитектуре «Файл-Сервер». 
53.В чём заключается особенность технологии взаимодействия и обработки данных в  архитектуре «Клиент-Сервер».
54.Архитектура «Файл-Сервер». Характеристики технологии обработки информации «Файл-Сервер». Достоинства и недостатки.
55.Архитектура «Клиент-Сервер». Характеристики технологии обработки информации «Клиент-Сервер». Достоинства и недостатки.

